apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "cello-master.fullname" . }}
  labels:
    app: {{ template "cello-master.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "cello-master.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: init-nfs-files
        image: "{{ .Values.operatorDashboardImage.repository }}:{{ .Values.operatorDashboardImage.tag }}"
        volumeMounts:
        - name: operator-nfs
          mountPath: "/opt/data"
        command: ["rsync"]
        args: ["-av", "--delete", "/app/agent/docker/_compose_files/", "/opt/data/"]
      containers:
        - name: "{{ .Chart.Name }}-nfs"
          image: "{{ .Values.nfsImage.repository }}:{{ .Values.nfsImage.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: nfs
              containerPort: 2049
              protocol: TCP
            - name: mountd
              containerPort: 20048
              protocol: TCP
            - name: rpcbind-tcp
              containerPort: 111
              protocol: TCP
            - name: rpcbind-udp
              containerPort: 111
              protocol: UDP
          args:
            - "-provisioner={{ template "nfs-provisioner.provisionerName" . }}"
          volumeMounts:
          - name: operator-nfs
            mountPath: "/export"
        - name: "{{ .Chart.Name }}-mongo"
          image: "{{ .Values.mongoImage.repository }}:{{ .Values.mongoImage.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: operator-mongo
            mountPath: "/data/db"
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
      - name: operator-nfs
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "cello-master.fullname" .) }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: operator-mongo
        persistentVolumeClaim:
          claimName: "{{ template "cello-master.fullname" . }}-mongo"
